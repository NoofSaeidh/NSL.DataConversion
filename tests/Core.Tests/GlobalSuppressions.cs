// This file is licensed under the MIT license.
// See the LICENSE file in the project root for more information.

// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Assertions", "xUnit2004:Do not use equality check to test for boolean conditions", Justification = "<Pending>", Scope = "member", Target = "~M:NSL.DataConversion.Core.Tests.Unit.Common.ITableTests`1.Indexer_GetWorks")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Assertions", "xUnit2003:Do not use equality check to test for null value", Justification = "<Pending>", Scope = "member", Target = "~M:NSL.DataConversion.Core.Tests.Unit.Common.IIntersectionTableTests`1.GetColumn_ReturnColumnEnumeration")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Assertions", "xUnit2004:Do not use equality check to test for boolean conditions", Justification = "<Pending>", Scope = "member", Target = "~M:NSL.DataConversion.Core.Tests.Unit.Common.IIntersectionTableTests`1.GetColumn_ReturnColumnEnumeration")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Assertions", "xUnit2003:Do not use equality check to test for null value", Justification = "<Pending>", Scope = "member", Target = "~M:NSL.DataConversion.Core.Tests.Unit.Common.IIntersectionTableTests`1.GetRow_ReturnRowEnumeration")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Assertions", "xUnit2004:Do not use equality check to test for boolean conditions", Justification = "<Pending>", Scope = "member", Target = "~M:NSL.DataConversion.Core.Tests.Unit.Common.IIntersectionTableTests`1.GetRow_ReturnRowEnumeration")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Assertions", "xUnit2004:Do not use equality check to test for boolean conditions", Justification = "<Pending>", Scope = "member", Target = "~M:NSL.DataConversion.Core.Tests.Unit.Common.IModifiableTableTests`1.GetColumn_Works")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Assertions", "xUnit2004:Do not use equality check to test for boolean conditions", Justification = "<Pending>", Scope = "member", Target = "~M:NSL.DataConversion.Core.Tests.Unit.Common.IModifiableTableTests`1.GetRow_Works")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Assertions", "xUnit2003:Do not use equality check to test for null value", Justification = "<Pending>", Scope = "member", Target = "~M:NSL.DataConversion.Core.Tests.Unit.Common.IModifiableTableTests`1.GetColumn_Works")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Assertions", "xUnit2003:Do not use equality check to test for null value", Justification = "<Pending>", Scope = "member", Target = "~M:NSL.DataConversion.Core.Tests.Unit.Common.IModifiableTableTests`1.GetRow_Works")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Assertions", "xUnit2004:Do not use equality check to test for boolean conditions", Justification = "<Pending>", Scope = "member", Target = "~M:NSL.DataConversion.Core.Tests.Unit.Common.IModifiableTableTests`1.RemoveColumn_Works")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Assertions", "xUnit2004:Do not use equality check to test for boolean conditions", Justification = "<Pending>", Scope = "member", Target = "~M:NSL.DataConversion.Core.Tests.Unit.Common.IModifiableTableTests`1.RemoveRow_Works")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Assertions", "xUnit2003:Do not use equality check to test for null value", Justification = "<Pending>", Scope = "member", Target = "~M:NSL.DataConversion.Core.Tests.Unit.Common.IModifiableTableTests`1.RemoveColumn_Works")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Assertions", "xUnit2003:Do not use equality check to test for null value", Justification = "<Pending>", Scope = "member", Target = "~M:NSL.DataConversion.Core.Tests.Unit.Common.IModifiableTableTests`1.RemoveRow_Works")]